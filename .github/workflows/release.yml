name: Android Release CI

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    # Set Current Date As Env Variable
    - name: Set current date as env variable
      run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    # Set Repository Name As Env Variable
    - name: Set repository name as env variable
      run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'
        cache: gradle
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Generate Keystore file from Github Secrets
      run: |
        echo "$KEYSTORE" > ../keystore.b64
        base64 -d -i ../keystore.b64 > ../keystore.jks
      env:
        KEYSTORE: ${{ secrets.APP_KEYSTORE_BASE64 }}
          
    - name: Build Release apk
      env:
        KEY_STORE_PATH: ${../keystore.jks}
        KEY_ALIAS_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
      run: |
        bash ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=$KEY_STORE_PATH \
          -Pandroid.injected.signing.store.password=$KEY_PASSWORD \
          -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
          -Pandroid.injected.signing.key.password=$KEY_PASSWORD \
          --stacktrace
      
    - name: Get release file apk path
      id: releaseApk
      run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT
    
    - name: Upload Release Build to Artifacts
      uses: actions/upload-artifact@v3
      with:
         name: release-artifacts
         path: ${{ steps.releaseApk.outputs.apkfile }}
    
    - name: action-slack
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: Github Action Test # default: 8398a7@action-slack
        fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
      if: always() # Pick up events even if the job fails or is canceled.
